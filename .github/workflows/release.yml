name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        python_version:
          - "3.10"
    steps:
    - uses: actions/checkout@v4

    - name: Setup PDM
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: ${{ matrix.python_version }}
        architecture: "x64"
        cache: true

    - name: Get Version
      id: version
      run: |
        echo "VERSION=$(pdm show --version)" >> $GITHUB_OUTPUT
        echo "TAG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Sync
      run: pdm sync && pdm run babel-compile

    - name: Build
      run: pdm build

    - name: Build Binary
      run: pdm run pyinstaller-build

    - name: Copy Resources
      run: |
        mkdir dist/CMC/
        cp dist/*.exe dist/CMC/ && cp -r resources/* dist/CMC/ && cp README.md dist/CMC/
      shell: bash

    - name: Pack
      run: Compress-Archive -Path dist/CMC -DestinationPath dist/COM_Mate_Converter-${{ steps.version.outputs.VERSION }}.zip
      shell: powershell

    - name: Release
      run: gh release upload --clobber ${{ steps.version.outputs.TAG_NAME }} (Get-Item .\dist\* -Include *.whl, *.zip)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: powershell
